<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\rvmdk\sd_card.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\rvmdk\sd_card.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Mon Nov 04 11:04:29 2019
<BR><P>
<H3>Maximum Stack Usage =        616 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
Cmd_ls &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; xmit_datablock &rArr; wait_ready &rArr; rcvr_spi
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[1d]">Reset_Handler</a>
 <LI><a href="#[d]">NmiSR</a>
 <LI><a href="#[e]">FaultISR</a>
 <LI><a href="#[f]">IntDefaultHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[d]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">NmiSR</a><BR>
 <LI><a href="#[e]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">FaultISR</a><BR>
 <LI><a href="#[f]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">IntDefaultHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[2]">CanvasMsgProc</a> from canvas.o(i.CanvasMsgProc) referenced 10 times from sd_card.o(.data)
 <LI><a href="#[a]">Cmd_cat</a> from sd_card.o(i.Cmd_cat) referenced 2 times from sd_card.o(.data)
 <LI><a href="#[8]">Cmd_cd</a> from sd_card.o(i.Cmd_cd) referenced 4 times from sd_card.o(.data)
 <LI><a href="#[6]">Cmd_help</a> from sd_card.o(i.Cmd_help) referenced 6 times from sd_card.o(.data)
 <LI><a href="#[7]">Cmd_ls</a> from sd_card.o(i.Cmd_ls) referenced 2 times from sd_card.o(.data)
 <LI><a href="#[9]">Cmd_pwd</a> from sd_card.o(i.Cmd_pwd) referenced 2 times from sd_card.o(.data)
 <LI><a href="#[e]">FaultISR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[14]">GrDefaultStringRenderer</a> from string.o(i.GrDefaultStringRenderer) referenced from context.o(i.GrContextInit)
 <LI><a href="#[1c]">GrMapISO8859_1_Unicode</a> from charmap.o(i.GrMapISO8859_1_Unicode) referenced 2 times from context.o(.constdata)
 <LI><a href="#[f]">IntDefaultHandler</a> from startup_rvmdk.o(RESET) referenced 113 times from startup_rvmdk.o(RESET)
 <LI><a href="#[1a]">Kentec320x240x16_SSD2119ColorTranslate</a> from kentec320x240x16_ssd2119.o(i.Kentec320x240x16_SSD2119ColorTranslate) referenced from kentec320x240x16_ssd2119.o(.constdata)
 <LI><a href="#[1b]">Kentec320x240x16_SSD2119Flush</a> from kentec320x240x16_ssd2119.o(i.Kentec320x240x16_SSD2119Flush) referenced from kentec320x240x16_ssd2119.o(.constdata)
 <LI><a href="#[17]">Kentec320x240x16_SSD2119LineDrawH</a> from kentec320x240x16_ssd2119.o(i.Kentec320x240x16_SSD2119LineDrawH) referenced from kentec320x240x16_ssd2119.o(.constdata)
 <LI><a href="#[18]">Kentec320x240x16_SSD2119LineDrawV</a> from kentec320x240x16_ssd2119.o(i.Kentec320x240x16_SSD2119LineDrawV) referenced from kentec320x240x16_ssd2119.o(.constdata)
 <LI><a href="#[15]">Kentec320x240x16_SSD2119PixelDraw</a> from kentec320x240x16_ssd2119.o(i.Kentec320x240x16_SSD2119PixelDraw) referenced from kentec320x240x16_ssd2119.o(.constdata)
 <LI><a href="#[16]">Kentec320x240x16_SSD2119PixelDrawMultiple</a> from kentec320x240x16_ssd2119.o(i.Kentec320x240x16_SSD2119PixelDrawMultiple) referenced from kentec320x240x16_ssd2119.o(.constdata)
 <LI><a href="#[19]">Kentec320x240x16_SSD2119RectFill</a> from kentec320x240x16_ssd2119.o(i.Kentec320x240x16_SSD2119RectFill) referenced from kentec320x240x16_ssd2119.o(.constdata)
 <LI><a href="#[0]">ListBoxMsgProc</a> from listbox.o(i.ListBoxMsgProc) referenced 4 times from sd_card.o(.data)
 <LI><a href="#[d]">NmiSR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[4]">OnBtnCD</a> from sd_card.o(i.OnBtnCD) referenced 2 times from sd_card.o(.data)
 <LI><a href="#[5]">OnBtnUp</a> from sd_card.o(i.OnBtnUp) referenced 2 times from sd_card.o(.data)
 <LI><a href="#[1]">OnListBoxChange</a> from sd_card.o(i.OnListBoxChange) referenced 2 times from sd_card.o(.data)
 <LI><a href="#[3]">RectangularButtonMsgProc</a> from pushbutton.o(i.RectangularButtonMsgProc) referenced 4 times from sd_card.o(.data)
 <LI><a href="#[1d]">Reset_Handler</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[10]">SysTickHandler</a> from sd_card.o(i.SysTickHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[12]">TouchScreenIntHandler</a> from touch.o(i.TouchScreenIntHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[11]">UARTStdioIntHandler</a> from uartstdio.o(i.UARTStdioIntHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[b]">WidgetDefaultMsgProc</a> from widget.o(i.WidgetDefaultMsgProc) referenced 2 times from widget.o(.data)
 <LI><a href="#[13]">main</a> from sd_card.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[1d]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[1e]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[8e]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[1f]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[21]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[8f]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[90]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[91]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[92]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[93]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[5a]"></a>WidgetMutexGet</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, widget.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueAdd
</UL>

<P><STRONG><a name="[30]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_cat
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeToDirectory
</UL>

<P><STRONG><a name="[2f]"></a>strncpy</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeToDirectory
</UL>

<P><STRONG><a name="[2e]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnBtnUp
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_cat
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeToDirectory
</UL>

<P><STRONG><a name="[2d]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_cat
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeToDirectory
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdLineProcess
</UL>

<P><STRONG><a name="[2c]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_cat
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeToDirectory
</UL>

<P><STRONG><a name="[20]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[94]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[95]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[96]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[2]"></a>CanvasMsgProc</STRONG> (Thumb, 448 bytes, Stack size 72 bytes, canvas.o(i.CanvasMsgProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = CanvasMsgProc &rArr; GrImageDraw &rArr; InternalImageDraw &rArr; PixelTransparentDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringWidthGet
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringDraw
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrImageDraw
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextFontSet
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextClipRegionSet
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetDefaultMsgProc
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectFill
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectDraw
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrFontHeightGet
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextInit
</UL>
<BR>[Address Reference Count : 3]<UL><LI> sd_card.o(.data)
<LI> sd_card.o(.data)
<LI> sd_card.o(.data)
</UL>
<P><STRONG><a name="[32]"></a>CmdLineProcess</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, cmdline.o(i.CmdLineProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CmdLineProcess &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a]"></a>Cmd_cat</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, sd_card.o(i.Cmd_cat))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = Cmd_cat &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; xmit_datablock &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTFlushTx
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sd_card.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>Cmd_cd</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, sd_card.o(i.Cmd_cd))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = Cmd_cd &rArr; PopulateFileListBox &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; xmit_datablock &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetRemove
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueAdd
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetAdd
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfStatus
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopulateFileListBox
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeToDirectory
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sd_card.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>Cmd_help</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, sd_card.o(i.Cmd_help))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Cmd_help &rArr; UARTprintf &rArr; UARTvprintf &rArr; UARTwrite &rArr; UARTPrimeTransmit
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTFlushTx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sd_card.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>Cmd_ls</STRONG> (Thumb, 392 bytes, Stack size 328 bytes, sd_card.o(i.Cmd_ls))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = Cmd_ls &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; xmit_datablock &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueAdd
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTFlushTx
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListBoxTextAdd
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StringFromFResult
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sd_card.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>Cmd_pwd</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, sd_card.o(i.Cmd_pwd))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Cmd_pwd &rArr; UARTprintf &rArr; UARTvprintf &rArr; UARTwrite &rArr; UARTPrimeTransmit
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTFlushTx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sd_card.o(.data)
</UL>
<P><STRONG><a name="[8b]"></a>GPIOPadConfigSet</STRONG> (Thumb, 312 bytes, Stack size 24 bytes, gpio.o(i.GPIOPadConfigSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on
</UL>

<P><STRONG><a name="[23]"></a>GrContextClipRegionSet</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, context.o(i.GrContextClipRegionSet))
<BR><BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListBoxMsgProc
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
</UL>

<P><STRONG><a name="[27]"></a>GrContextFontSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, string.o(i.GrContextFontSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GrContextFontSet &rArr; UpdateContextCharMapping
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateContextCharMapping
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListBoxMsgProc
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
</UL>

<P><STRONG><a name="[22]"></a>GrContextInit</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, context.o(i.GrContextInit))
<BR><BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListBoxMsgProc
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
</UL>

<P><STRONG><a name="[14]"></a>GrDefaultStringRenderer</STRONG> (Thumb, 280 bytes, Stack size 72 bytes, string.o(i.GrDefaultStringRenderer))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = GrDefaultStringRenderer &rArr; GrFontGlyphRender
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrFontGlyphRender
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrFontGlyphDataGet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> context.o(i.GrContextInit)
</UL>
<P><STRONG><a name="[4d]"></a>GrFontBaselineGet</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, string.o(i.GrFontBaselineGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GrFontBaselineGet
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
</UL>

<P><STRONG><a name="[42]"></a>GrFontGlyphDataGet</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, string.o(i.GrFontGlyphDataGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GrFontGlyphDataGet
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringWidthGet
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrDefaultStringRenderer
</UL>

<P><STRONG><a name="[43]"></a>GrFontGlyphRender</STRONG> (Thumb, 646 bytes, Stack size 64 bytes, string.o(i.GrFontGlyphRender))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GrFontGlyphRender
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrDefaultStringRenderer
</UL>

<P><STRONG><a name="[29]"></a>GrFontHeightGet</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, string.o(i.GrFontHeightGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GrFontHeightGet
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListBoxMsgProc
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
</UL>

<P><STRONG><a name="[26]"></a>GrImageDraw</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, image.o(i.GrImageDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = GrImageDraw &rArr; InternalImageDraw &rArr; PixelTransparentDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InternalImageDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
</UL>

<P><STRONG><a name="[45]"></a>GrLineDrawH</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, line.o(i.GrLineDrawH))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GrLineDrawH
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectDraw
</UL>

<P><STRONG><a name="[46]"></a>GrLineDrawV</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, line.o(i.GrLineDrawV))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GrLineDrawV
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectDraw
</UL>

<P><STRONG><a name="[1c]"></a>GrMapISO8859_1_Unicode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, charmap.o(i.GrMapISO8859_1_Unicode))
<BR>[Address Reference Count : 1]<UL><LI> context.o(.constdata)
</UL>
<P><STRONG><a name="[25]"></a>GrRectDraw</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, rectangle.o(i.GrRectDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GrRectDraw &rArr; GrLineDrawV
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrLineDrawV
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrLineDrawH
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListBoxMsgProc
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
</UL>

<P><STRONG><a name="[24]"></a>GrRectFill</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, rectangle.o(i.GrRectFill))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GrRectFill
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListBoxMsgProc
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
</UL>

<P><STRONG><a name="[2a]"></a>GrStringDraw</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, string.o(i.GrStringDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GrStringDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListBoxMsgProc
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
</UL>

<P><STRONG><a name="[28]"></a>GrStringWidthGet</STRONG> (Thumb, 192 bytes, Stack size 64 bytes, string.o(i.GrStringWidthGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GrStringWidthGet &rArr; GrFontGlyphDataGet
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrFontGlyphDataGet
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListBoxMsgProc
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
</UL>

<P><STRONG><a name="[5d]"></a>LCDIDDCommandWrite</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd.o(i.LCDIDDCommandWrite))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
</UL>

<P><STRONG><a name="[5e]"></a>LCDIDDDataWrite</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd.o(i.LCDIDDDataWrite))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
</UL>

<P><STRONG><a name="[0]"></a>ListBoxMsgProc</STRONG> (Thumb, 888 bytes, Stack size 104 bytes, listbox.o(i.ListBoxMsgProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = ListBoxMsgProc &rArr; GrStringWidthGet &rArr; GrFontGlyphDataGet
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueAdd
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringWidthGet
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringDraw
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextFontSet
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextClipRegionSet
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetDefaultMsgProc
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectFill
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectDraw
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrFontHeightGet
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sd_card.o(.data)
</UL>
<P><STRONG><a name="[3c]"></a>ListBoxTextAdd</STRONG> (Thumb, 106 bytes, Stack size 4 bytes, listbox.o(i.ListBoxTextAdd))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ListBoxTextAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_ls
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfStatus
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopulateFileListBox
</UL>

<P><STRONG><a name="[4]"></a>OnBtnCD</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, sd_card.o(i.OnBtnCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = OnBtnCD &rArr; PopulateFileListBox &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; xmit_datablock &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetRemove
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueAdd
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetAdd
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StringFromFResult
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfStatus
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopulateFileListBox
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeToDirectory
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sd_card.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>OnBtnUp</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, sd_card.o(i.OnBtnUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = OnBtnUp &rArr; PopulateFileListBox &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; xmit_datablock &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetRemove
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueAdd
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetAdd
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StringFromFResult
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfStatus
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopulateFileListBox
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeToDirectory
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sd_card.o(.data)
</UL>
<P><STRONG><a name="[1]"></a>OnListBoxChange</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, sd_card.o(i.OnListBoxChange))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = OnListBoxChange &rArr; PrintfStatus &rArr; uvsnprintf &rArr; ustrncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetRemove
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueAdd
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetAdd
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sd_card.o(.data)
</UL>
<P><STRONG><a name="[89]"></a>PinoutSet</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, pinout.o(i.PinoutSet))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3]"></a>RectangularButtonMsgProc</STRONG> (Thumb, 304 bytes, Stack size 24 bytes, pushbutton.o(i.RectangularButtonMsgProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = RectangularButtonMsgProc &rArr; RectangularButtonPaint &rArr; GrImageDraw &rArr; InternalImageDraw &rArr; PixelTransparentDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetDefaultMsgProc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sd_card.o(.data)
</UL>
<P><STRONG><a name="[88]"></a>SysCtlClockFreqSet</STRONG> (Thumb, 700 bytes, Stack size 24 bytes, sysctl.o(i.SysCtlClockFreqSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysCtlClockFreqSet
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10]"></a>SysTickHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sd_card.o(i.SysTickHandler))
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_timerproc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TouchScreenIntHandler</STRONG> (Thumb, 290 bytes, Stack size 40 bytes, touch.o(i.TouchScreenIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TouchScreenIntHandler &rArr; TouchScreenDebouncer
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenDebouncer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>UARTFlushRx</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, uartstdio.o(i.UARTFlushRx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UARTFlushRx
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioConfig
</UL>

<P><STRONG><a name="[36]"></a>UARTFlushTx</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, uartstdio.o(i.UARTFlushTx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UARTFlushTx
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBufferEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioConfig
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_pwd
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_ls
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_help
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_cat
</UL>

<P><STRONG><a name="[51]"></a>UARTPeek</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, uartstdio.o(i.UARTPeek))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UARTPeek
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBufferCount
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[54]"></a>UARTStdioConfig</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, uartstdio.o(i.UARTStdioConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UARTStdioConfig &rArr; UARTFlushTx
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTFlushTx
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTFlushRx
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11]"></a>UARTStdioIntHandler</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, uartstdio.o(i.UARTStdioIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = UARTStdioIntHandler &rArr; UARTwrite &rArr; UARTPrimeTransmit
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPrimeTransmit
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBufferFull
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBufferEmpty
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>UARTgets</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, uartstdio.o(i.UARTgets))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UARTgets
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBufferEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[33]"></a>UARTprintf</STRONG> (Thumb, 18 bytes, Stack size 24 bytes, uartstdio.o(i.UARTprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = UARTprintf &rArr; UARTvprintf &rArr; UARTwrite &rArr; UARTPrimeTransmit
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTvprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_pwd
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_ls
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_help
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_cd
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_cat
</UL>

<P><STRONG><a name="[59]"></a>UARTvprintf</STRONG> (Thumb, 420 bytes, Stack size 56 bytes, uartstdio.o(i.UARTvprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = UARTvprintf &rArr; UARTwrite &rArr; UARTPrimeTransmit
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
</UL>

<P><STRONG><a name="[56]"></a>UARTwrite</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, uartstdio.o(i.UARTwrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = UARTwrite &rArr; UARTPrimeTransmit
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPrimeTransmit
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBufferFull
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBufferEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioIntHandler
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTvprintf
</UL>

<P><STRONG><a name="[3a]"></a>WidgetAdd</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, widget.o(i.WidgetAdd))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnListBoxChange
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnBtnUp
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnBtnCD
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_cd
</UL>

<P><STRONG><a name="[b]"></a>WidgetDefaultMsgProc</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, widget.o(i.WidgetDefaultMsgProc))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonMsgProc
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListBoxMsgProc
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget.o(.data)
</UL>
<P><STRONG><a name="[39]"></a>WidgetMessageQueueAdd</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, widget.o(i.WidgetMessageQueueAdd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WidgetMessageQueueAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMutexGet
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListBoxMsgProc
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnListBoxChange
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnBtnUp
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnBtnCD
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_ls
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_cd
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfStatus
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopulateFileListBox
</UL>

<P><STRONG><a name="[5b]"></a>WidgetMessageQueueProcess</STRONG> (Thumb, 168 bytes, Stack size 40 bytes, widget.o(i.WidgetMessageQueueProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = WidgetMessageQueueProcess &rArr; WidgetMessageSendPostOrder
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageSendPostOrder
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5c]"></a>WidgetMessageSendPostOrder</STRONG> (Thumb, 208 bytes, Stack size 40 bytes, widget.o(i.WidgetMessageSendPostOrder))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WidgetMessageSendPostOrder
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueProcess
</UL>

<P><STRONG><a name="[3b]"></a>WidgetRemove</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, widget.o(i.WidgetRemove))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WidgetRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnListBoxChange
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnBtnUp
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnBtnCD
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_cd
</UL>

<P><STRONG><a name="[97]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[98]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[99]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[72]"></a>clust2sect</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ff.o(i.clust2sect))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[63]"></a>disk_initialize</STRONG> (Thumb, 344 bytes, Stack size 32 bytes, mmc-dk-tm4c129x.o(i.disk_initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = disk_initialize &rArr; power_on &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_initial_clock_train
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvr_spi
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SELECT
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DESELECT
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
</UL>

<P><STRONG><a name="[60]"></a>disk_read</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, mmc-dk-tm4c129x.o(i.disk_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = disk_read &rArr; send_cmd &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xmit_spi
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvr_spi
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvr_datablock
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SELECT
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DESELECT
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
</UL>

<P><STRONG><a name="[62]"></a>disk_status</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mmc-dk-tm4c129x.o(i.disk_status))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
</UL>

<P><STRONG><a name="[4e]"></a>disk_timerproc</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, mmc-dk-tm4c129x.o(i.disk_timerproc))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickHandler
</UL>

<P><STRONG><a name="[7f]"></a>disk_write</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, mmc-dk-tm4c129x.o(i.disk_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = disk_write &rArr; xmit_datablock &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xmit_datablock
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvr_spi
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SELECT
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DESELECT
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
</UL>

<P><STRONG><a name="[40]"></a>f_getfree</STRONG> (Thumb, 194 bytes, Stack size 48 bytes, ff.o(i.f_getfree))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = f_getfree &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; xmit_datablock &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_ls
</UL>

<P><STRONG><a name="[8a]"></a>f_mount</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ff.o(i.f_mount))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[34]"></a>f_open</STRONG> (Thumb, 314 bytes, Stack size 96 bytes, ff.o(i.f_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; xmit_datablock &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_cat
</UL>

<P><STRONG><a name="[31]"></a>f_opendir</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, ff.o(i.f_opendir))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; xmit_datablock &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_ls
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopulateFileListBox
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeToDirectory
</UL>

<P><STRONG><a name="[35]"></a>f_read</STRONG> (Thumb, 320 bytes, Stack size 40 bytes, ff.o(i.f_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = f_read &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; xmit_datablock &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_cat
</UL>

<P><STRONG><a name="[3e]"></a>f_readdir</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, ff.o(i.f_readdir))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = f_readdir &rArr; dir_read &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; xmit_datablock &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_ls
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopulateFileListBox
</UL>

<P><STRONG><a name="[68]"></a>ff_convert</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, cc932.o(i.ff_convert))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ff_convert
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[6b]"></a>ff_wtoupper</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, cc932.o(i.ff_wtoupper))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[76]"></a>gen_numname</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, ff.o(i.gen_numname))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gen_numname
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[65]"></a>get_fat</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, ff.o(i.get_fat))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; xmit_datablock &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>

<P><STRONG><a name="[82]"></a>get_fattime</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mmc-dk-tm4c129x.o(i.get_fattime))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[13]"></a>main</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, sd_card.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = main &rArr; UARTprintf &rArr; UARTvprintf &rArr; UARTwrite &rArr; UARTPrimeTransmit
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueProcess
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTgets
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioConfig
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPeek
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockFreqSet
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StringFromFResult
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinoutSet
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdLineProcess
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[66]"></a>put_fat</STRONG> (Thumb, 248 bytes, Stack size 32 bytes, ff.o(i.put_fat))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; xmit_datablock &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>

<P><STRONG><a name="[4a]"></a>usnprintf</STRONG> (Thumb, 18 bytes, Stack size 24 bytes, ustdlib.o(i.usnprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = usnprintf &rArr; uvsnprintf &rArr; ustrncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uvsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopulateFileListBox
</UL>

<P><STRONG><a name="[3f]"></a>usprintf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, ustdlib.o(i.usprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = usprintf &rArr; uvsnprintf &rArr; ustrncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uvsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_ls
</UL>

<P><STRONG><a name="[8d]"></a>ustrncpy</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ustdlib.o(i.ustrncpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ustrncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uvsnprintf
</UL>

<P><STRONG><a name="[4b]"></a>uvsnprintf</STRONG> (Thumb, 580 bytes, Stack size 36 bytes, ustdlib.o(i.uvsnprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = uvsnprintf &rArr; ustrncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usnprintf
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfStatus
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[5f]"></a>check_fs</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, ff.o(i.check_fs))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = check_fs &rArr; disk_read &rArr; send_cmd &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
</UL>

<P><STRONG><a name="[69]"></a>chk_chr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ff.o(i.chk_chr))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[61]"></a>chk_mounted</STRONG> (Thumb, 518 bytes, Stack size 32 bytes, ff.o(i.chk_mounted))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = chk_mounted &rArr; disk_initialize &rArr; power_on &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
</UL>

<P><STRONG><a name="[64]"></a>create_chain</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, ff.o(i.create_chain))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; xmit_datablock &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[67]"></a>create_name</STRONG> (Thumb, 520 bytes, Stack size 48 bytes, ff.o(i.create_name))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = create_name &rArr; ff_convert
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_chr
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_wtoupper
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_convert
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[6c]"></a>dir_find</STRONG> (Thumb, 290 bytes, Stack size 40 bytes, ff.o(i.dir_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; xmit_datablock &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_wtoupper
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[70]"></a>dir_next</STRONG> (Thumb, 232 bytes, Stack size 24 bytes, ff.o(i.dir_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; xmit_datablock &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[73]"></a>dir_read</STRONG> (Thumb, 248 bytes, Stack size 48 bytes, ff.o(i.dir_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = dir_read &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; xmit_datablock &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[74]"></a>dir_register</STRONG> (Thumb, 416 bytes, Stack size 56 bytes, ff.o(i.dir_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; xmit_datablock &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_numname
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[6d]"></a>dir_sdi</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, ff.o(i.dir_sdi))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = dir_sdi &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; xmit_datablock &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[81]"></a>follow_path</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, ff.o(i.follow_path))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; xmit_datablock &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[87]"></a>get_fileinfo</STRONG> (Thumb, 218 bytes, Stack size 24 bytes, ff.o(i.get_fileinfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_fileinfo &rArr; ff_convert
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_convert
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[83]"></a>ld_clust</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ff.o(i.ld_clust))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[75]"></a>mem_cpy</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ff.o(i.mem_cpy))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_numname
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[6a]"></a>mem_set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ff.o(i.mem_set))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[6e]"></a>move_window</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, ff.o(i.move_window))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = move_window &rArr; sync_window &rArr; disk_write &rArr; xmit_datablock &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[85]"></a>remove_chain</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, ff.o(i.remove_chain))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = remove_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; xmit_datablock &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[84]"></a>st_clust</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ff.o(i.st_clust))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[6f]"></a>sum_sfn</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ff.o(i.sum_sfn))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[71]"></a>sync_window</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, ff.o(i.sync_window))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = sync_window &rArr; disk_write &rArr; xmit_datablock &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[86]"></a>validate</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ff.o(i.validate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = validate
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
</UL>

<P><STRONG><a name="[1a]"></a>Kentec320x240x16_SSD2119ColorTranslate</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, kentec320x240x16_ssd2119.o(i.Kentec320x240x16_SSD2119ColorTranslate))
<BR>[Address Reference Count : 1]<UL><LI> kentec320x240x16_ssd2119.o(.constdata)
</UL>
<P><STRONG><a name="[1b]"></a>Kentec320x240x16_SSD2119Flush</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, kentec320x240x16_ssd2119.o(i.Kentec320x240x16_SSD2119Flush))
<BR>[Address Reference Count : 1]<UL><LI> kentec320x240x16_ssd2119.o(.constdata)
</UL>
<P><STRONG><a name="[17]"></a>Kentec320x240x16_SSD2119LineDrawH</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, kentec320x240x16_ssd2119.o(i.Kentec320x240x16_SSD2119LineDrawH))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Kentec320x240x16_SSD2119LineDrawH &rArr; WriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kentec320x240x16_ssd2119.o(.constdata)
</UL>
<P><STRONG><a name="[18]"></a>Kentec320x240x16_SSD2119LineDrawV</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, kentec320x240x16_ssd2119.o(i.Kentec320x240x16_SSD2119LineDrawV))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Kentec320x240x16_SSD2119LineDrawV &rArr; WriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kentec320x240x16_ssd2119.o(.constdata)
</UL>
<P><STRONG><a name="[15]"></a>Kentec320x240x16_SSD2119PixelDraw</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, kentec320x240x16_ssd2119.o(i.Kentec320x240x16_SSD2119PixelDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Kentec320x240x16_SSD2119PixelDraw &rArr; WriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kentec320x240x16_ssd2119.o(.constdata)
</UL>
<P><STRONG><a name="[16]"></a>Kentec320x240x16_SSD2119PixelDrawMultiple</STRONG> (Thumb, 278 bytes, Stack size 32 bytes, kentec320x240x16_ssd2119.o(i.Kentec320x240x16_SSD2119PixelDrawMultiple))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Kentec320x240x16_SSD2119PixelDrawMultiple &rArr; WriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kentec320x240x16_ssd2119.o(.constdata)
</UL>
<P><STRONG><a name="[19]"></a>Kentec320x240x16_SSD2119RectFill</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, kentec320x240x16_ssd2119.o(i.Kentec320x240x16_SSD2119RectFill))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Kentec320x240x16_SSD2119RectFill &rArr; WriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kentec320x240x16_ssd2119.o(.constdata)
</UL>
<P><STRONG><a name="[48]"></a>WriteCommand</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, kentec320x240x16_ssd2119.o(i.WriteCommand))
<BR><BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDIDDCommandWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kentec320x240x16_SSD2119RectFill
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kentec320x240x16_SSD2119PixelDrawMultiple
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kentec320x240x16_SSD2119PixelDraw
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kentec320x240x16_SSD2119LineDrawV
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kentec320x240x16_SSD2119LineDrawH
</UL>

<P><STRONG><a name="[49]"></a>WriteData</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, kentec320x240x16_ssd2119.o(i.WriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDIDDDataWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kentec320x240x16_SSD2119RectFill
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kentec320x240x16_SSD2119PixelDrawMultiple
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kentec320x240x16_SSD2119PixelDraw
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kentec320x240x16_SSD2119LineDrawV
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kentec320x240x16_SSD2119LineDrawH
</UL>

<P><STRONG><a name="[7c]"></a>DESELECT</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, mmc-dk-tm4c129x.o(i.DESELECT))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_initial_clock_train
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[79]"></a>SELECT</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, mmc-dk-tm4c129x.o(i.SELECT))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[77]"></a>power_on</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, mmc-dk-tm4c129x.o(i.power_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = power_on &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_initial_clock_train
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[7d]"></a>rcvr_datablock</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, mmc-dk-tm4c129x.o(i.rcvr_datablock))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rcvr_datablock &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvr_spi
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[7b]"></a>rcvr_spi</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, mmc-dk-tm4c129x.o(i.rcvr_spi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rcvr_spi
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xmit_datablock
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_ready
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvr_datablock
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[7a]"></a>send_cmd</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, mmc-dk-tm4c129x.o(i.send_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = send_cmd &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xmit_spi
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_ready
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvr_spi
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[78]"></a>send_initial_clock_train</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, mmc-dk-tm4c129x.o(i.send_initial_clock_train))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = send_initial_clock_train
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DESELECT
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[8c]"></a>wait_ready</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, mmc-dk-tm4c129x.o(i.wait_ready))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvr_spi
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xmit_datablock
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
</UL>

<P><STRONG><a name="[80]"></a>xmit_datablock</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, mmc-dk-tm4c129x.o(i.xmit_datablock))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = xmit_datablock &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xmit_spi
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_ready
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvr_spi
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[7e]"></a>xmit_spi</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, mmc-dk-tm4c129x.o(i.xmit_spi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xmit_spi
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xmit_datablock
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[2b]"></a>ChangeToDirectory</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, sd_card.o(i.ChangeToDirectory))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = ChangeToDirectory &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; xmit_datablock &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnBtnUp
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnBtnCD
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_cd
</UL>

<P><STRONG><a name="[38]"></a>PopulateFileListBox</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, sd_card.o(i.PopulateFileListBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = PopulateFileListBox &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; xmit_datablock &rArr; wait_ready &rArr; rcvr_spi
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usnprintf
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueAdd
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListBoxTextAdd
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StringFromFResult
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfStatus
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnBtnUp
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnBtnCD
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_cd
</UL>

<P><STRONG><a name="[37]"></a>PrintfStatus</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, sd_card.o(i.PrintfStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = PrintfStatus &rArr; uvsnprintf &rArr; ustrncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uvsnprintf
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueAdd
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListBoxTextAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnListBoxChange
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnBtnUp
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnBtnCD
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_cd
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopulateFileListBox
</UL>

<P><STRONG><a name="[3d]"></a>StringFromFResult</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, sd_card.o(i.StringFromFResult))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnBtnUp
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnBtnCD
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_ls
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PopulateFileListBox
</UL>

<P><STRONG><a name="[d]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>TouchScreenDebouncer</STRONG> (Thumb, 326 bytes, Stack size 32 bytes, touch.o(i.TouchScreenDebouncer))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TouchScreenDebouncer
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenIntHandler
</UL>

<P><STRONG><a name="[52]"></a>GetBufferCount</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uartstdio.o(i.GetBufferCount))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPeek
</UL>

<P><STRONG><a name="[50]"></a>IsBufferEmpty</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uartstdio.o(i.IsBufferEmpty))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioIntHandler
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTgets
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTFlushTx
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPrimeTransmit
</UL>

<P><STRONG><a name="[57]"></a>IsBufferFull</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, uartstdio.o(i.IsBufferFull))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioIntHandler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
</UL>

<P><STRONG><a name="[53]"></a>UARTPrimeTransmit</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, uartstdio.o(i.UARTPrimeTransmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UARTPrimeTransmit
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBufferEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioIntHandler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
</UL>

<P><STRONG><a name="[44]"></a>InternalImageDraw</STRONG> (Thumb, 890 bytes, Stack size 120 bytes, image.o(i.InternalImageDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = InternalImageDraw &rArr; PixelTransparentDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PixelTransparentDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrImageDraw
</UL>

<P><STRONG><a name="[47]"></a>PixelTransparentDraw</STRONG> (Thumb, 662 bytes, Stack size 80 bytes, image.o(i.PixelTransparentDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = PixelTransparentDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InternalImageDraw
</UL>

<P><STRONG><a name="[4c]"></a>RectangularButtonPaint</STRONG> (Thumb, 418 bytes, Stack size 80 bytes, pushbutton.o(i.RectangularButtonPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = RectangularButtonPaint &rArr; GrImageDraw &rArr; InternalImageDraw &rArr; PixelTransparentDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringWidthGet
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringDraw
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrImageDraw
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrFontBaselineGet
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextFontSet
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextClipRegionSet
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectFill
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectDraw
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextInit
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonMsgProc
</UL>

<P><STRONG><a name="[41]"></a>UpdateContextCharMapping</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, string.o(i.UpdateContextCharMapping))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UpdateContextCharMapping
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextFontSet
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
